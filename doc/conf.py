# -*- coding: utf-8 -*-
#
# spl documentation build configuration file, created by
# sphinx-quickstart on Fri Feb 16 16:21:17 2018.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
sys.path.insert(0, os.path.abspath('..'))


# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = ['sphinx.ext.autodoc',
              'sphinx.ext.todo',
              'sphinx.ext.imgmath',
              'sphinx.ext.viewcode',
              'sphinxcontrib.bibtex']

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'spl'
copyright = u'2018, A. Ratnani, J. Lakhlili, Y. Guclu'
author = u'A. Ratnani, J. Lakhlili, Y. Guclu'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = u'0.9'
# The full version, including alpha/beta/rc tags.
release = u'1'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True

# -- Doxygen + autodoc ----------------------------------------------
import subprocess
subprocess.call('rm -rf api-python; sphinx-apidoc -o api-python/ ../spl', shell=True)
subprocess.call('doxygen Doxyfile ', shell=True)

# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'alabaster'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
#html_static_path = ['_static', '../doxygen/']

# specify the side bar
#html_sidebars = { '**': ['globaltoc.html', 'relations.html', 'sourcelink.html'], }
html_sidebars = { '**': ['localtoc.html', 'relations.html', 'searchbox.html'], }


# -- Options for Tikz -----------------------------------------------------
#tikz_proc_suite     = 'GhostScript'
#tikz_transparent    = True
#tikz_latex_preamble = ‹string›
#tikz_tikzlibraries  = 'positioning,shapes,shadows,arrows'


# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'spldoc'


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'spl.tex', u'spl Documentation',
     u'A. Ratnani, J. Lakhlili', 'manual'),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
#latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
#latex_use_parts = False

# If true, show page references after internal links.
#latex_show_pagerefs = False

# If true, show URL addresses after external links.
#latex_show_urls = False

# Documents to append as an appendix to all manuals.
#latex_appendices = []

# If false, no module index is generated.
#latex_domain_indices = True

latex_engine='pdflatex'

latex_additional_files = ['latex_macros.sty']
latex_elements = {
    'printmodindex': '',
    'printindex': '',
    'preamble' : r'\usepackage{amsmath} \usepackage{amssymb} \usepackage{latex_macros}',
    'docclass':'report',
    }

#####################################################
# add LaTeX macros

f = open('latex_macros.sty', 'r')

try:
    imgmath_latex_preamble  # check whether this is already defined
except NameError:
    imgmath_latex_preamble = ""

for macro in f:
    # used when building html version
    imgmath_latex_preamble += macro + '\n'

#####################################################

# -- Options for Tikz ----------------------------------------------------------
tikz_proc_suite     = 'GhostScript'
tikz_transparent    = True
#tikz_latex_preamble = ‹string›
#tikz_tikzlibraries  = 'positioning,shapes,shadows,arrows'

# -- Options for manual page output --------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'spl', u'spl Documentation',
     [author], 1)
]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'spl', u'spl Documentation',
     author, 'spl', 'One line description of project.',
     'Miscellaneous'),
]


# -- Mocking fortran packages: needed for rtd --------------------------------
import sys
from unittest.mock import MagicMock

class Mock(MagicMock):
    @classmethod
    def __getattr__(cls, name):
        return MagicMock()

MOCK_MODULES = ['spl.core.bsp']
sys.modules.update((mod_name, Mock()) for mod_name in MOCK_MODULES)
